<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="structgraybat_1_1CommunicationVertex" kind="struct" language="C++" prot="public">
    <compoundname>graybat::CommunicationVertex</compoundname>
    <templateparamlist>
      <param>
        <type>class T_Cage</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structgraybat_1_1CommunicationVertex_1aeee40c9512c61c846a05c2b73f55f2c9" prot="public" static="no">
        <type>unsigned</type>
        <definition>typedef unsigned graybat::CommunicationVertex&lt; T_Cage &gt;::VertexID</definition>
        <argsstring></argsstring>
        <name>VertexID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="11" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structgraybat_1_1CommunicationVertex_1a4120bf81952878038cfd69e92265267e" prot="public" static="no">
        <type>T_Cage</type>
        <definition>typedef T_Cage graybat::CommunicationVertex&lt; T_Cage &gt;::Cage</definition>
        <argsstring></argsstring>
        <name>Cage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="12" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structgraybat_1_1CommunicationVertex_1a8c259ebf87eaefc4c9a18852d5382475" prot="public" static="no">
        <type>Cage::GraphPolicy</type>
        <definition>typedef Cage::GraphPolicy graybat::CommunicationVertex&lt; T_Cage &gt;::GraphPolicy</definition>
        <argsstring></argsstring>
        <name>GraphPolicy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="13" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structgraybat_1_1CommunicationVertex_1abe1383c4d00cea45c02e871433e8612f" prot="public" static="no">
        <type><ref refid="structgraybat_1_1CommunicationEdge" kindref="compound">Cage::Edge</ref></type>
        <definition>typedef Cage::Edge graybat::CommunicationVertex&lt; T_Cage &gt;::Edge</definition>
        <argsstring></argsstring>
        <name>Edge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="14" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structgraybat_1_1CommunicationVertex_1ab1153fcb89c4d288da7e430baf587a52" prot="public" static="no">
        <type>Cage::Event</type>
        <definition>typedef Cage::Event graybat::CommunicationVertex&lt; T_Cage &gt;::Event</definition>
        <argsstring></argsstring>
        <name>Event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="15" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structgraybat_1_1CommunicationVertex_1abe4165d0c7c7f813a959f2009015d51c" prot="public" static="no">
        <type>GraphPolicy::VertexProperty</type>
        <definition>typedef GraphPolicy::VertexProperty graybat::CommunicationVertex&lt; T_Cage &gt;::VertexProperty</definition>
        <argsstring></argsstring>
        <name>VertexProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="16" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraybat_1_1CommunicationVertex_1a01b16ce123148e1f96ec8b55f7401c81" prot="public" static="no" mutable="no">
        <type>VertexID</type>
        <definition>VertexID graybat::CommunicationVertex&lt; T_Cage &gt;::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="18" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraybat_1_1CommunicationVertex_1a98f6a9b2a8becc8a426b709b7585dd9b" prot="public" static="no" mutable="no">
        <type>VertexProperty &amp;</type>
        <definition>VertexProperty&amp; graybat::CommunicationVertex&lt; T_Cage &gt;::vertexProperty</definition>
        <argsstring></argsstring>
        <name>vertexProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="19" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraybat_1_1CommunicationVertex_1a9a1d9c75faadb5b9193aba6779e7acb1" prot="public" static="no" mutable="no">
        <type>Cage &amp;</type>
        <definition>Cage&amp; graybat::CommunicationVertex&lt; T_Cage &gt;::cage</definition>
        <argsstring></argsstring>
        <name>cage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="20" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraybat_1_1CommunicationVertex_1aed87c447f125df835e684bad263abbd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graybat::CommunicationVertex&lt; T_Cage &gt;::CommunicationVertex</definition>
        <argsstring>(const VertexID id, VertexProperty &amp;vertexProperty, Cage &amp;cage)</argsstring>
        <name>CommunicationVertex</name>
        <param>
          <type>const VertexID</type>
          <declname>id</declname>
        </param>
        <param>
          <type>VertexProperty &amp;</type>
          <declname>vertexProperty</declname>
        </param>
        <param>
          <type>Cage &amp;</type>
          <declname>cage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="22" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="22" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="structgraybat_1_1CommunicationVertex_1ac105903261ca2312c6ca0d679f26aa44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VertexProperty &amp;</type>
        <definition>VertexProperty&amp; graybat::CommunicationVertex&lt; T_Cage &gt;::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="32" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="structgraybat_1_1CommunicationVertex_1a058aac41c1bbdc59337af4e10ad9ac40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgraybat_1_1CommunicationVertex" kindref="compound">CommunicationVertex</ref> &amp;</type>
        <definition>CommunicationVertex&amp; graybat::CommunicationVertex&lt; T_Cage &gt;::operator=</definition>
        <argsstring>(const CommunicationVertex &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structgraybat_1_1CommunicationVertex" kindref="compound">CommunicationVertex</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="36" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structgraybat_1_1CommunicationVertex_1a58ceec635b5b2924734110af83518feb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t graybat::CommunicationVertex&lt; T_Cage &gt;::nInEdges</definition>
        <argsstring>() const </argsstring>
        <name>nInEdges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="44" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="structgraybat_1_1CommunicationVertex_1a5705604ec15a24d75f37c7949f0884a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t graybat::CommunicationVertex&lt; T_Cage &gt;::nOutEdges</definition>
        <argsstring>() const </argsstring>
        <name>nOutEdges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="48" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="structgraybat_1_1CommunicationVertex_1ab50927eabcb8ac0d97bce641533990a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool graybat::CommunicationVertex&lt; T_Cage &gt;::operator==</definition>
        <argsstring>(CommunicationVertex v)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structgraybat_1_1CommunicationVertex" kindref="compound">CommunicationVertex</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="52" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="structgraybat_1_1CommunicationVertex_1ad2924554fd4b661f19c1bb10b8519dd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool graybat::CommunicationVertex&lt; T_Cage &gt;::operator!=</definition>
        <argsstring>(CommunicationVertex v)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="structgraybat_1_1CommunicationVertex" kindref="compound">CommunicationVertex</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="56" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structgraybat_1_1CommunicationVertex_1a8a64f187996fd556723997e5ff9dcca2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T_Data</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void graybat::CommunicationVertex&lt; T_Cage &gt;::spread</definition>
        <argsstring>(const T_Data &amp;data, std::vector&lt; Event &gt; &amp;events)</argsstring>
        <name>spread</name>
        <param>
          <type>const T_Data &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::vector&lt; Event &gt; &amp;</type>
          <declname>events</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="65" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structgraybat_1_1CommunicationVertex_1a3a0cbc8f98f2eeb60fbe20e437802878" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T_Data</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void graybat::CommunicationVertex&lt; T_Cage &gt;::spread</definition>
        <argsstring>(const T_Data &amp;data)</argsstring>
        <name>spread</name>
        <param>
          <type>const T_Data &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="70" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structgraybat_1_1CommunicationVertex_1a11ef52a5a8fef1098b60b35c8913da94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T_Data</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void graybat::CommunicationVertex&lt; T_Cage &gt;::collect</definition>
        <argsstring>(T_Data &amp;data)</argsstring>
        <name>collect</name>
        <param>
          <type>T_Data &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="76" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="structgraybat_1_1CommunicationVertex_1aa8c10d97bde2b66352ce88a5bf3bad12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T_Data</type>
          </param>
          <param>
            <type>class T_Functor</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void graybat::CommunicationVertex&lt; T_Cage &gt;::forward</definition>
        <argsstring>(T_Data &amp;data, T_Functor f)</argsstring>
        <name>forward</name>
        <param>
          <type>T_Data &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>T_Functor</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="82" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="82" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structgraybat_1_1CommunicationVertex_1af7139cd8308d3a43060c31a24a9bb6db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T_Data</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void graybat::CommunicationVertex&lt; T_Cage &gt;::forward</definition>
        <argsstring>(T_Data &amp;data)</argsstring>
        <name>forward</name>
        <param>
          <type>T_Data &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="90" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="90" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="structgraybat_1_1CommunicationVertex_1a8e222acd742cb03215c93220e19c24ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_Op</type>
          </param>
        </templateparamlist>
        <type>T_Op::result_type</type>
        <definition>T_Op::result_type graybat::CommunicationVertex&lt; T_Cage &gt;::accumulate</definition>
        <argsstring>(const T_Op op, const typename T_Op::result_type init)</argsstring>
        <name>accumulate</name>
        <param>
          <type>const T_Op</type>
          <declname>op</declname>
        </param>
        <param>
          <type>const typename T_Op::result_type</type>
          <declname>init</declname>
        </param>
        <briefdescription>
<para>Collects from each incoming edge one elements and reduces them by the binary operator op. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>binary operator used for reduction (e.g. std::plus). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>init</parametername>
</parameternamelist>
<parameterdescription>
<para>initial value of the reduction.</para></parameterdescription>
</parameteritem>
</parameterlist>
Each adjacent vertex can send a most one element.</para><para><simplesect kind="return"><para>reduced value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graybat/Vertex.hpp" line="110" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="110" bodyend="115"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/graybat/Vertex.hpp" line="9" column="1" bodyfile="include/graybat/Vertex.hpp" bodystart="9" bodyend="117"/>
    <listofallmembers>
      <member refid="structgraybat_1_1CommunicationVertex_1a8e222acd742cb03215c93220e19c24ed" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>accumulate</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1a4120bf81952878038cfd69e92265267e" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>Cage</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1a9a1d9c75faadb5b9193aba6779e7acb1" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>cage</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1a11ef52a5a8fef1098b60b35c8913da94" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>collect</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1aed87c447f125df835e684bad263abbd5" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>CommunicationVertex</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1abe1383c4d00cea45c02e871433e8612f" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>Edge</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1ab1153fcb89c4d288da7e430baf587a52" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>Event</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1aa8c10d97bde2b66352ce88a5bf3bad12" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>forward</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1af7139cd8308d3a43060c31a24a9bb6db" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>forward</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1a8c259ebf87eaefc4c9a18852d5382475" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>GraphPolicy</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1a01b16ce123148e1f96ec8b55f7401c81" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>id</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1a58ceec635b5b2924734110af83518feb" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>nInEdges</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1a5705604ec15a24d75f37c7949f0884a9" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>nOutEdges</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1ad2924554fd4b661f19c1bb10b8519dd5" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>operator!=</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1ac105903261ca2312c6ca0d679f26aa44" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>operator()</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1a058aac41c1bbdc59337af4e10ad9ac40" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>operator=</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1ab50927eabcb8ac0d97bce641533990a8" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>operator==</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1a8a64f187996fd556723997e5ff9dcca2" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>spread</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1a3a0cbc8f98f2eeb60fbe20e437802878" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>spread</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1aeee40c9512c61c846a05c2b73f55f2c9" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>VertexID</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1a98f6a9b2a8becc8a426b709b7585dd9b" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>vertexProperty</name></member>
      <member refid="structgraybat_1_1CommunicationVertex_1abe4165d0c7c7f813a959f2009015d51c" prot="public" virt="non-virtual"><scope>graybat::CommunicationVertex</scope><name>VertexProperty</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
